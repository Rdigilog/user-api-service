#  Build and Push to ECR 

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.AWS_ECR_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push image to Amazon ECR
        run: |
          docker build -t ${{ secrets.ECR_REPO }} .
          docker tag ${{ secrets.ECR_REPO }}:latest ${{ secrets.ECR_REG }}/${{ secrets.ECR_REPO }}:$(git rev-list --count HEAD)
          docker push ${{ secrets.ECR_REG }}/${{ secrets.ECR_REPO }}:$(git rev-list --count HEAD)
          
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq


      - name: Prune Old Images  
        run: |
          aws ecr describe-images --repository-name ${{ secrets.ECR_REPO }} --output json \
          | jq -r '.imageDetails | sort_by(.imagePushedAt) | reverse | .[5:] |.[].imageTags[]' \
          | grep -v latest \
          | xargs -I {} aws ecr batch-delete-image --repository-name ${{ secrets.ECR_REPO }} --image-ids imageTag={}
        env:
          AWS_DEFAULT_REGION: eu-west-2


       
      - name: Clean up
        run: |
          docker rmi ${{ secrets.ECR_REG }}/${{ secrets.ECR_REPO }}:$(git rev-list --count HEAD)
